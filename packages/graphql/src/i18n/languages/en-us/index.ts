import { I18nKey } from "../../../interfaces/i18n-key";

export const enUSMessages: Record<I18nKey, string> = {
  accessNotFound: "Access not found",
  accessesNotFound: "Accesses not found",
  accountAlreadyExists: "Account already exists",
  accountNotFound: "Account not found",
  accountUsernameAlreadyExists: "Account username already exists",
  accountsNotFound: "Accounts not found",
  addressNotFound: "Address not found",
  addressesNotFound: "Addresses not found",
  appAdminNotFound: "App admin not found",
  appAdminUnauthorizedRemove: "App admin unauthorized remove",
  appAdminsNotFound: "App admins not found",
  appInstructorNotFound: "App instructor not found",
  appInstructorsNotFound: "App instructors not found",
  appNotFound: "App not found",
  appUnauthorized: "App unauthorized",
  appsNotFound: "Apps not found",
  catalogItemAlreadyExists: "Catalog item already exists",
  catalogItemNotFound: "Catalog item not found",
  catalogItemsNotFound: "Catalog items not found",
  catalogNotFound: "Catalog not found",
  catalogsNotFound: "Catalogs not found",
  colorAlreadyExists: "Color already exists",
  colorNotFound: "Color not found",
  colorsNotFound: "Colors not found",
  courseInstructorAlreadyExists: "Course instructor already exists",
  courseInstructorNotFound: "Course instructor not found",
  courseInstructorsNotFound: "Course instructors not found",
  courseNotFound: "Course not found",
  courseStudentAlreadyExists: "Course student already exists",
  courseStudentNotFound: "Course student not found",
  courseStudentsNotFound: "Course students not found",
  coursesNotFound: "Courses not found",
  currenciesNotFound: "Currencies not found",
  currencyNotFound: "Currency not found",
  dataNotFound: "Data not found",
  domainAlreadyExists: "Domain already exists",
  domainNotFound: "Domain not found",
  domainsNotFound: "Domains not found",
  errorRemovingFile: "Error removing file",
  errorUpdatingForgotPasswordCode: "Error updating forgot password code",
  errorUpdatingPassword: "Error updating password",
  errorUploadingFile: "Error uploading file",
  featureNotFound: "Feature not found",
  featuresNotFound: "Features not found",
  fileNotFound: "File not found",
  filesNotFound: "Files not found",
  heroNotFound: "Hero not found",
  herosNotFound: "Heros not found",
  imageNotFound: "Image not found",
  imagesNotFound: "Images not found",
  invalidEmailOrPassword: "Invalid email or password",
  invalidFile: "Invalid file",
  invoiceNotFound: "Invoice not found",
  invoicesNotFound: "Invoices not found",
  languageNotFound: "Language not found",
  languagesNotFound: "Languages not found",
  moduleNotFound: "Module not found",
  modulesNotFound: "Modules not found",
  paymentMethodAlreadyExists: "Payment method already exists",
  paymentMethodIsUnique: "Payment method is unique",
  paymentMethodNotFound: "Payment method not found",
  paymentMethodsNotFound: "Payment methods not found",
  phoneNotFound: "Phone not found",
  phonesNotFound: "Phones not found",
  planAlreadyExists: "Plan already exists",
  planNotFound: "Plan not found",
  planUnauthorized: "Plan unauthorized",
  plansNotFound: "Plans not found",
  priceNotFound: "Price not found",
  priceTierNotFound: "Price tier not found",
  priceTiersNotFound: "Price tiers not found",
  pricesNotFound: "Prices not found",
  productNotFound: "Product not found",
  productsNotFound: "Products not found",
  recurringNotFound: "Recurring not found",
  recurringsNotFound: "Recurrings not found",
  roleNotFound: "Role not found",
  rolesNotFound: "Roles not found",
  sortedItemNotFound: "Sorted item not found",
  sortedItemsNotFound: "Sorted items not found",
  stripeAccountAlreadyExists: "Stripe account already exists",
  stripeAccountNotFound: "Stripe account not found",
  stripeCustomerAlreadyExists: "Stripe customer already exists",
  stripeSignatureNotFound: "Stripe signature not found",
  subscriptionContractAlreadyActive: "Subscription contract already active",
  subscriptionContractAlreadyCanceled: "Subscription contract already canceled",
  subscriptionContractAlreadyFinished: "Subscription contract already finished",
  subscriptionContractItemNotFound: "Subscription contract item not found",
  subscriptionContractItemPriceUnauthorizedRemove:
    "Subscription contract item price unauthorized remove",
  subscriptionContractItemPriceUnauthorizedUpdate:
    "Subscription contract item price unauthorized update",
  subscriptionContractItemsNotFound: "Subscription contract items not found",
  subscriptionContractNotFound: "Subscription contract not found",
  subscriptionContractsNotFound: "Subscription contracts not found",
  usageRecordNotFound: "Usage record not found",
  usageRecordsNotFound: "Usage records not found",
  userUnauthorized: "User unauthorized",
  videoAuthorNotFound: "Video author not found",
  videoAuthorsNotFound: "Video authors not found",
  videoNotFound: "Video not found",
  videosNotFound: "Videos not found",
};
